<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picMainLogo.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TQAAAABJRU5ErkJggg==
</value>
  </data>
</root>