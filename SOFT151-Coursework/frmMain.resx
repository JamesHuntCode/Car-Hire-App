<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picMainLogo.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>